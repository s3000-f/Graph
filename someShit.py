import networkx as nx
import matplotlib.pyplot as plt
from Subgraphs import f as f, star as s, Path as p, h as h, cycle as c

g = nx.Graph()
g.add_cycle([0, 1, 2, 3])
g.add_edge(0, 4)
g.add_edge(1, 4)
f = open('data/G' + str(1) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3])
g.add_edge(0, 4)
g.add_edge(0, 5)
f = open('data/G' + str(2) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2])
g.add_edge(0, 4)
g.add_edge(1, 5)
f = open('data/G' + str(3) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_edge(0, 1)
g.add_edge(0, 2)
g.add_edge(0, 3)
f = open('data/G' + str(4) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_edge(0, 1)
g.add_edge(0, 2)
g.add_edge(0, 3)
g.add_edge(0, 4)
f = open('data/G' + str(5) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2])
g.add_cycle([0, 3, 4])
f = open('data/G' + str(6) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3])
g.add_cycle([0, 4, 5, 6])
f = open('data/G' + str(7) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3])
g.add_edge(0, 4)
g.add_edge(1, 5)
f = open('data/G' + str(8) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3])
g.add_edge(0, 4)
g.add_edge(2, 5)
f = open('data/G' + str(9) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3, 4, 5])
g.add_edge(0, 6)
f = open('data/G' + str(10) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3, 4, 5])
g.add_edge(0, 3)
f = open('data/G' + str(11) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3, 4, 5])
g.add_edge(0, 2)
f = open('data/G' + str(12) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3])
g.add_edge(0, 2)
f = open('data/G' + str(24) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3])
f = open('data/G' + str(13) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3])
g.add_edge(0, 4)
f = open('data/G' + str(14) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3, 4])
g.add_edge(0, 2)
g.add_edge(0, 3)
f = open('data/G' + str(15) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2])
f = open('data/G' + str(16) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3, 4, 5])
f = open('data/G' + str(18) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2, 3, 4, 5, 6, 7])
f = open('data/G' + str(19) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_edge(0, 1)
f = open('data/G' + str(20) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_edge(0, 1)
g.add_edge(2, 1)
f = open('data/G' + str(21) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_edge(0, 1)
g.add_edge(2, 1)
g.add_edge(2, 3)
f = open('data/G' + str(22) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_edge(0, 1)
g.add_edge(2, 1)
g.add_edge(2, 3)
g.add_edge(3, 4)
f = open('data/G' + str(17) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2])
g.add_edge(0, 3)
f = open('data/G' + str(23) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2])
g.add_edge(0, 3)
g.add_edge(0, 4)
f = open('data/G' + str(27) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_cycle([0, 1, 2])
g.add_edge(0, 3)
g.add_edge(4, 3)
f = open('data/G' + str(25) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
g = nx.Graph()
g.add_edge(0, 1)
g.add_edge(1, 2)
g.add_edge(2, 3)
g.add_edge(1, 4)
f = open('data/G' + str(26) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
plt.draw()
plt.show()


g = nx.Graph()
g.add_cycle([0, 1, 2, 3, 4])
f = open('data/G' + str(28) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()

g = nx.Graph()
g.add_edge(0, 1)
g.add_edge(1, 2)
g.add_edge(2, 3)
g.add_edge(3, 4)
g.add_edge(5, 4)
f = open('data/G' + str(29) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()

g = nx.Graph()
g.add_cycle([0, 1, 2, 3, 4, 5])
g.add_edge(0, 6)
f = open('data/G' + str(30) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()

nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
plt.draw()
plt.show()


g = nx.Graph()
g.add_cycle([0, 1, 2])
g.add_cycle([0, 3, 4])
g.add_edge(0, 5)
f = open('data/G' + str(31) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()

g = nx.Graph()
g.add_cycle([0, 1, 2, 3])
g.add_edge(0, 4)
g.add_edge(0, 2)
f = open('data/G' + str(32) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
g = nx.Graph()
g.add_cycle([0, 1, 2])
g.add_cycle([0, 3, 4])
g.add_edge(2, 5)
f = open('data/G' + str(33) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
g = nx.Graph()
g.add_cycle([0, 1, 2])
g.add_cycle([0, 3, 4, 5, 6])
f = open('data/G' + str(34) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()

g = nx.Graph()
g.add_cycle([0, 1, 2, 3, 4, 5])
g.add_edge(0, 2)
f = open('data/G' + str(35) + '.txt', 'w')
f.write(str(nx.to_numpy_matrix(g).tolist()).replace(".0", "").replace("],", "\n")
        .replace("[", "").replace("]]", "").replace(" ", ""))
f.close()
# nx.draw_networkx(g, with_labels=True, edge_color='red', node_color='blue', node_size=9)
# plt.draw()
# plt.show()
# h = nx.Graph()
# h.add_path(range(0, i))
# f = open('data/P' + str(i) + '.txt', 'w')
# f.write(str(nx.to_numpy_matrix(h).tolist()).replace(".0", "").replace("],", "\n")
#         .replace("[", "").replace("]]", "").replace(" ", ""))
# f.close()
